{"version":3,"sources":["assets/images/default-userimage.png","components/autocomplete.js","components/file-upload.js","components/froala.js","components/Loader.js","components/case_creator.js","components/app_icon.js","components/dashboard.js","components/glassware.js","components/overview.js","components/theme.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","UserAutocomplete","props","useState","users","setUsersData","defaultHopperId","assignTo","setAssignTo","open","setOpen","loading","setLoading","timeoutRef","useRef","selectedUser","setSelectedUser","defaultHopper","filterUser","userId","userData","filter","x","id","getUsers","searchText","event","a","config","method","url","data","systemId","typeId","fieldId","itemInfoFieldId","fromPageIndex","toPageIndex","userName","axios","then","response","responseContent","sort","b","displayName","localeCompare","usersData","catch","error","console","log","renderUserImage","onError","userDefaultImage","require","target","src","addDefaultSrc","height","width","className","style","marginTop","Autocomplete","options","getOptionLabel","option","renderOption","Icon","username","primaryJobTitle","onChange","user","handleAutocompleteChange","onInput","current","clearTimeout","setTimeout","searchUsers","value","onKeyUp","onOpen","onClose","renderInput","params","TextField","label","placeholder","variant","fullWidth","InputLabelProps","fontWeight","color","InputProps","endAdornment","Fragment","CircularProgress","size","FileUpload","formDataValue","setFormDataValue","Button","paddingLeft","component","Box","type","hidden","file","files","formData","FormData","append","caseType","name","fileData","handleOnFileChange","Froala","tag","apiKey","Loading","Component","CaseCreator","setData","loaded","setLoaded","setCaseType","caseTypeData","setCaseTypeData","parentChildData","setParentChildData","froalaValue","setFroala","maxCount","parentValue","setParentValue","setLoadMoreText","disableCaseType","setCaseTypeDisable","setDefaultHopper","setDefaultHopperId","caseTypes","get","resp","useEffect","fields","caseTypeId","ls","SecureLS","encodingType","isCompression","encryptionSecret","fieldData","sessionFieldData","JSON","parse","sessionParentChildData","loadParentDropDown","concat","stringify","set","length","responseData","superParentAssocTypeIds","externalData","ExternalDataSourceId","childAssocTypeIds","map","CASE_ASSOC_TYPE_ID_CHILD","filteredExternalData","item","indexOf","AssocTypeId","currentData","commentIndex","findIndex","c","i","jsonData","skipCount","application","typeID","fieldID","parentValues","assoc_decode","loadMoreData","assocTypeId","preventDefault","stopPropagation","parentData","find","parentId","CASE_ASSOC_TYPE_ID_PARENT","String","handleChange","forEach","index","childData","childIndex","convertRequired","IsRequired","createFroalaField","onModelChange","e","createDropDownField","required","onScroll","scrollHeight","scrollTop","clientHeight","select","Name","MenuItem","key","DecodeId","DecodeValue","fieldHandler","AssocFieldType","shrink","createTextField","createDateField","Grid","container","spacing","xs","onSubmit","submitted","Object","entries","elements","input","swal","Card","Container","defaultHopperValue","CASE_TYPE_ID","HopperName","DEFAULT_HOPPER_ID","handleCaseTypeChange","disabled","NAME","Fab","top","aria-label","idx","makeStyles","theme","small","large","avatar","flexGrow","useStyles","createStyles","glass","background","GlassBox","classes","margin","children","OverView","maxWidth","cursor","onClick","navigate","handleClick","createMuiTheme","palette","primary","main","indigo","secondary","lightBlue","root","minHeight","backgroundImage","App","ThemeProvider","path","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.40642b65.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/default-userimage.3a298c3f.png\";","import { Icon, TextField } from \"@material-ui/core\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport axios from \"axios\";\r\nimport React, { Fragment, useRef, useState } from \"react\";\r\n\r\nexport default function UserAutocomplete(props) {\r\n  const [users, setUsersData] = useState([]);\r\n  const [assignTo, setAssignTo] = useState(props.defaultHopperId);\r\n  const [open, setOpen] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n  const timeoutRef = useRef(null);\r\n  const [selectedUser, setSelectedUser] = useState(\"\");\r\n  const [defaultHopper, setDefaultHopper] = useState(props.defaultHopper);\r\n  const [defaultHopperId, setDefaultHopperId] = useState(props.defaultHopperId);\r\n\r\n  let timeoutVal = 1000; // time it takes to wait for user to stop typing in ms\r\n\r\n  const handleAutocompleteKeyPress = () => {\r\n    clearTimeout(timeoutRef.current);\r\n  };\r\n\r\n  const handleAutocompleteKeyUp = (searchText) => {\r\n    if (searchText == \"\") {\r\n      setAssignTo(defaultHopperId);\r\n      setSelectedUser(\"\");\r\n      setUsersData([]);\r\n    }\r\n  };\r\n\r\n  const filterUser = (userId) => {\r\n    let userData = users.filter((x) => x.id === userId);\r\n    if (userData) {\r\n      setUsersData(userData);\r\n    }\r\n  };\r\n\r\n  const handleAutocompleteChange = (userId, displayName) => {\r\n    if (userId) {\r\n      props.handleAutocompleteChange(userId);\r\n      setAssignTo(userId);\r\n      setSelectedUser(displayName);\r\n      filterUser(userId);\r\n    } else {\r\n      props.handleAutocompleteChange(defaultHopperId);\r\n      setAssignTo(defaultHopperId);\r\n      setSelectedUser(\"\");\r\n      setUsersData([]);\r\n    }\r\n  };\r\n\r\n  const searchUsers = (searchText, event) => {\r\n    if (timeoutRef.current !== null) {\r\n      // IF THERE'S A RUNNING TIMEOUT\r\n      clearTimeout(timeoutRef.current); // THEN, CANCEL IT\r\n    }\r\n    if (searchText != \"\") {\r\n      setLoading(true);\r\n    }\r\n    // clearTimeout(timer);\r\n\r\n    timeoutRef.current = setTimeout(() => {\r\n      // SET A TIMEOUT\r\n      timeoutRef.current = null; // RESET REF TO NULL WHEN IT RUNS\r\n      if (searchText) {\r\n        getUsers(searchText, event);\r\n      } else {\r\n        setUsersData([]);\r\n        setLoading(false);\r\n      }\r\n    }, timeoutVal);\r\n  };\r\n\r\n  const getUsers = async (searchText, event) => {\r\n    var jsonData = {\r\n      searchText: searchText,\r\n      systemId: 0,\r\n      typeId: 0,\r\n      fieldId: 0,\r\n      itemInfoFieldId: 0,\r\n      fromPageIndex: 0,\r\n      toPageIndex: 0,\r\n      userName: \"\",\r\n    };\r\n\r\n    var config = {\r\n      method: \"post\",\r\n      url: \"http://localhost:5000/cases/GetEmployeesBySearch\",\r\n      data: jsonData,\r\n    };\r\n\r\n    await axios(config)\r\n      .then(function (response) {\r\n        if (response?.data?.responseContent) {\r\n          response.data.responseContent = response.data.responseContent.sort(\r\n            (a, b) => a.displayName.localeCompare(b.displayName)\r\n          );\r\n        }\r\n        const usersData = response.data.responseContent;\r\n\r\n        setUsersData(usersData);\r\n        setLoading(false);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n        setLoading(false);\r\n      });\r\n  };\r\n\r\n  const addDefaultSrc = (event) => {\r\n    let userDefaultImage = require(\"../assets/images/default-userimage.png\");\r\n    if (userDefaultImage) {\r\n      event.target.src = userDefaultImage;\r\n    }\r\n  };\r\n\r\n  const renderUserImage = (userName) => {\r\n    if (userName) {\r\n      return (\r\n        <img\r\n          onError={(event) => addDefaultSrc(event)}\r\n          src={\r\n            \"http://services.boxerproperty.com/userphotos/DownloadPhoto.aspx?username=\" +\r\n            userName\r\n          }\r\n          height={50}\r\n          width={50}\r\n        />\r\n      );\r\n    } else {\r\n      return (\r\n        <img\r\n          src=\"../assets/images/default-userimage.png\"\r\n          height={50}\r\n          width={50}\r\n        />\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"assign-to-div\">\r\n      <label>Assign To :</label>\r\n      <div style={{ width: \"auto\", marginTop: \"1rem\" }}>\r\n        {\" \"}\r\n        {\r\n          <Autocomplete\r\n            {...props}\r\n            className=\"\"\r\n            id=\"users\"\r\n            options={users}\r\n            getOptionLabel={(option) => option.displayName}\r\n            renderOption={(option) => {\r\n              return (\r\n                <Fragment>\r\n                  <Icon className=\"s-option-auto-image\">\r\n                    {renderUserImage(option?.username)}\r\n                  </Icon>\r\n                  {option?.displayName +\r\n                    (option.primaryJobTitle\r\n                      ? \" (\" + option.primaryJobTitle + \")\"\r\n                      : \"\")}\r\n                </Fragment>\r\n              );\r\n            }}\r\n            // getOptionValue={(option) => option.id}\r\n            style={{ width: \"auto\" }}\r\n            onChange={(event, user) =>\r\n              handleAutocompleteChange(user?.id, user?.displayName)\r\n            }\r\n            onInput={(event) => searchUsers(event.target.value, event)}\r\n            onKeyUp={(event) => handleAutocompleteKeyUp(event.target.value)}\r\n            open={open}\r\n            loading={loading}\r\n            onOpen={(event) => {\r\n              setOpen(true);\r\n              if (assignTo === defaultHopperId) {\r\n                setUsersData([]);\r\n              } else {\r\n                filterUser(assignTo);\r\n              }\r\n            }}\r\n            onClose={(event) => {\r\n              setOpen(false);\r\n            }}\r\n            renderInput={(params) => (\r\n              <Fragment>\r\n                <TextField\r\n                  {...params}\r\n                  label={\r\n                    selectedUser\r\n                      ? selectedUser\r\n                      : \"Default Hopper- \" + defaultHopper\r\n                  }\r\n                  placeholder=\"Search User\"\r\n                  variant=\"outlined\"\r\n                  fullWidth={true}\r\n                  InputLabelProps={{\r\n                    style: { fontWeight: \"bold\", color: \"black\" },\r\n                  }}\r\n                  InputProps={{\r\n                    ...params.InputProps,\r\n                    endAdornment: (\r\n                      <React.Fragment>\r\n                        {loading ? (\r\n                          <CircularProgress color=\"inherit\" size={20} />\r\n                        ) : null}\r\n                        {params.InputProps.endAdornment}\r\n                      </React.Fragment>\r\n                    ),\r\n                  }}\r\n                />\r\n              </Fragment>\r\n            )}\r\n          />\r\n        }\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { Box, Button } from \"@material-ui/core\";\r\nimport AttachFileIcon from \"@material-ui/icons/AttachFile\";\r\nimport React, { useState } from \"react\";\r\n\r\nexport default function FileUpload(props) {\r\n  const [formDataValue, setFormDataValue] = useState([]);\r\n\r\n  const onFileChange = (event) => {\r\n    var file = event.target.files[0];\r\n\r\n    const formData = new FormData();\r\n    if (file) {\r\n      formData.append(\"myFile\" + props.caseType, file, file.name);\r\n      const fileData = [...formData];\r\n      //Set details of the uploaded file\r\n      setFormDataValue(fileData);\r\n      console.log(file);\r\n      props.handleOnFileChange(fileData);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"cm-file-input\">\r\n      <br></br>\r\n      <Button style={{ paddingLeft: 0 }} component=\"label\">\r\n        <Box className=\"file-input\">\r\n          <AttachFileIcon></AttachFileIcon>\r\n        </Box>\r\n        <input type=\"file\" hidden id=\"fileUpload\" onChange={onFileChange} />\r\n      </Button>\r\n      <label>{formDataValue[0] ? formDataValue[0][1]?.name : \"\"}</label>\r\n    </div>\r\n  );\r\n}\r\n","import \"froala-editor/css/froala_editor.pkgd.min.css\";\r\n// Require Editor CSS files.\r\nimport \"froala-editor/css/froala_style.min.css\";\r\n// Require Editor plugin files.\r\nimport \"froala-editor/js/plugins.pkgd.min.js\";\r\nimport React from \"react\";\r\nimport FroalaEditor from \"react-froala-wysiwyg\";\r\nimport FroalaEditorView from \"react-froala-wysiwyg/FroalaEditorView\";\r\n\r\n\r\n// Require Font Awesome.\r\n// import 'font-awesome/css/font-awesome.css';\r\n\r\nexport default function Froala(props) {\r\n  return (\r\n    <div className=\"\">\r\n      <FroalaEditor\r\n        {...props}\r\n        tag=\"textarea\"\r\n        config={{\r\n          apiKey:\r\n            \"AVB8B-21A3B3E3D2F2D1ua2BD1IMNBUMRWAd1AYMSTRBUZYA-9H3E2J2C5C6B3B2B5B1D1==\",\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n\r\n  // return ( <FroalaEditor\r\n  //     {...props}\r\n  //     config={{apiKey:'AVB8B-21A3B3E3D2F2D1ua2BD1IMNBUMRWAd1AYMSTRBUZYA-9H3E2J2C5C6B3B2B5B1D1=='}}/> )\r\n}\r\n\r\nfunction ViewFroala() {\r\n  return <FroalaEditorView />;\r\n}\r\n","import React, { Component } from \"react\";\r\nimport \"./Loader.css\";\r\n\r\nclass Loading extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"loader-overlay\"></div>\r\n        <div className=\"sk-cube-grid cm-spinner\"></div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Loading;\r\n","import {\r\n  Box,\r\n  Card,\r\n  Container,\r\n  Fab,\r\n  Grid,\r\n  MenuItem,\r\n  TextField\r\n} from \"@material-ui/core\";\r\nimport axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport SecureLS from \"secure-ls\";\r\nimport swal from \"sweetalert\";\r\nimport UserAutocomplete from \"./autocomplete.js\";\r\nimport FileUpload from \"./file-upload.js\";\r\nimport Froala from \"./froala.js\";\r\nimport Loading from \"./Loader.js\";\r\n\r\n//Ideally this componet takes in a case-type-id,\r\n//make call to backend for data, then generates\r\n//case inpus component\r\n\r\nexport default function CaseCreator(props) {\r\n  const [data, setData] = useState([]);\r\n  const [loaded, setLoaded] = useState(false);\r\n  const [state, setState] = useState({});\r\n  const [caseType, setCaseType] = useState(0);\r\n  const [caseTypeData, setCaseTypeData] = useState([]);\r\n  const [parentChildData, setParentChildData] = useState([]);\r\n  const [froalaValue, setFroala] = useState({});\r\n  const [formDataValue, setFormDataValue] = useState([]);\r\n  const [maxCount, setMaxCount] = useState(50);\r\n  const [parentValue, setParentValue] = useState(0);\r\n  const [loadMoreText, setLoadMoreText] = useState(false);\r\n  const [disableCaseType, setCaseTypeDisable] = useState(false);\r\n  const [defaultHopper, setDefaultHopper] = useState(\"\");\r\n  const [defaultHopperId, setDefaultHopperId] = useState(0);\r\n  const [assignTo, setAssignTo] = useState(0);\r\n  const [isFirstField, setIsFirstField] = useState(true);\r\n\r\n  const caseTypes = async () => {\r\n    setLoaded(false);\r\n    await axios.get(\"http://localhost:5000/cases/caseTypes\").then((resp) => {\r\n      setLoaded(true);\r\n      setCaseTypeData(resp.data);\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    caseTypes();\r\n  }, []);\r\n\r\n  const handleCaseTypeChange = (event) => {\r\n    const caseTypeId = event.target.value;\r\n    setData([]);\r\n    setCaseType(caseTypeId);\r\n    if (caseTypeId > 0) {\r\n      setLoaded(false);\r\n      var defaultHopperValue = caseTypeData.find(\r\n        (x) => x.CASE_TYPE_ID === caseTypeId\r\n      );\r\n      if (defaultHopperValue) {\r\n        setDefaultHopper(defaultHopperValue.HopperName);\r\n        setDefaultHopperId(defaultHopperValue.DEFAULT_HOPPER_ID);\r\n        setAssignTo(defaultHopperValue.DEFAULT_HOPPER_ID);\r\n      }\r\n\r\n      fields(caseTypeId);\r\n    }\r\n  };\r\n\r\n  const fields = (caseTypeId) => {\r\n    // var ls = new SecureLS({encodingType: 'aes'});\r\n    var ls = new SecureLS({\r\n      encodingType: \"des\",\r\n      isCompression: false,\r\n      encryptionSecret: \"BhavikS\",\r\n    });\r\n    var fieldData = [];\r\n    caseTypeId = caseTypeId ? caseTypeId : caseType;\r\n    var sessionFieldData = ls.get(\"CaseType-\" + caseTypeId);\r\n\r\n    var fieldDataReceived = false;\r\n    if (sessionFieldData || sessionFieldData != \"\") {\r\n      setData(JSON.parse(sessionFieldData));\r\n      fieldData = JSON.parse(sessionFieldData);\r\n      setLoaded(true);\r\n      fieldDataReceived = true;\r\n    }\r\n\r\n    var sessionParentChildData = ls.get(\"ParentChildData-\" + caseTypeId);\r\n\r\n    var parentChildDataReceived = false;\r\n    if (sessionParentChildData || sessionParentChildData != \"\") {\r\n      setParentChildData(JSON.parse(sessionParentChildData));\r\n      setLoaded(true);\r\n      parentChildDataReceived = true;\r\n      loadParentDropDown(\r\n        JSON.parse(sessionParentChildData),\r\n        fieldData,\r\n        caseTypeId\r\n      );\r\n    }\r\n    setCaseTypeDisable(true);\r\n    axios\r\n      .get(\"http://localhost:5000/cases/config?CaseTypeID=\".concat(caseTypeId))\r\n      .then((resp) => {\r\n        if (sessionFieldData !== JSON.stringify(resp.data)) {\r\n          setData(resp.data);\r\n          ls.set(\"CaseType-\" + caseTypeId, JSON.stringify(resp.data)); // set encrypted CaseType fields\r\n          fieldData = resp.data;\r\n        }\r\n\r\n        if (fieldData.length > 0) {\r\n          axios\r\n            .get(\r\n              \"http://localhost:5000/cases/caseassoctypecascade?CaseTypeID=\".concat(\r\n                caseTypeId\r\n              )\r\n            )\r\n            .then((resp) => {\r\n              if (sessionParentChildData !== JSON.stringify(resp.data)) {\r\n                setParentChildData(resp.data);\r\n                ls.set(\r\n                  \"ParentChildData-\" + caseTypeId,\r\n                  JSON.stringify(resp.data)\r\n                );\r\n                setLoaded(true);\r\n                loadParentDropDown(resp.data, fieldData, caseTypeId);\r\n              }\r\n            });\r\n        }\r\n      });\r\n  };\r\n\r\n  // useEffect(caseTypes, fields, []);\r\n\r\n  const loadParentDropDown = async (responseData, fieldData, caseTypeId) => {\r\n    let superParentAssocTypeIds = [];\r\n    var externalData = fieldData.filter((x) => x.ExternalDataSourceId > 0);\r\n\r\n    // Use map to get a simple array of \"CASE_ASSOC_TYPE_ID_CHILD\" values. Ex: [1,2,3]\r\n    let childAssocTypeIds = responseData.map((x) => {\r\n      return x.CASE_ASSOC_TYPE_ID_CHILD;\r\n    });\r\n\r\n    if (externalData.length > 0 && childAssocTypeIds.length > 0) {\r\n      var filteredExternalData = externalData.filter(function (item) {\r\n        return childAssocTypeIds.indexOf(item.AssocTypeId) === -1;\r\n      });\r\n      superParentAssocTypeIds = filteredExternalData.map((x) => {\r\n        return x.AssocTypeId;\r\n      });\r\n    } else {\r\n      superParentAssocTypeIds = externalData.map((x) => {\r\n        return x.AssocTypeId;\r\n      });\r\n    }\r\n\r\n    for (var i = 0; i < superParentAssocTypeIds.length; i++) {\r\n      const currentData = [...fieldData];\r\n      var commentIndex = fieldData.findIndex(function (c) {\r\n        return c.AssocTypeId == superParentAssocTypeIds[i];\r\n      });\r\n      if (currentData[commentIndex]) {\r\n        var jsonData = {\r\n          searchText: \"\",\r\n          maxCount: maxCount,\r\n          skipCount: 0,\r\n          application: 0,\r\n          typeID: caseTypeId,\r\n          fieldID: superParentAssocTypeIds[i],\r\n          username: \"\",\r\n          parentValues: { [\"0\"]: [\"0\"] },\r\n        };\r\n\r\n        var config = {\r\n          method: \"post\",\r\n          url: \"http://localhost:5000/cases/GetExternalDataValues\",\r\n          data: jsonData,\r\n        };\r\n\r\n        await axios(config)\r\n          .then(function (response) {\r\n            const externalData = response.data.responseContent;\r\n            currentData[commentIndex].assoc_decode = externalData;\r\n            setData(currentData);\r\n          })\r\n          .catch(function (error) {\r\n            console.log(error);\r\n          });\r\n      }\r\n    }\r\n    setCaseTypeDisable(false);\r\n  };\r\n\r\n  const onScroll = (fieldData, event) => {\r\n    const bottom =\r\n      event.target.scrollHeight - event.target.scrollTop ===\r\n      event.target.clientHeight;\r\n    if (bottom) {\r\n      loadMoreData(\r\n        fieldData.AssocTypeId,\r\n        \"\",\r\n        maxCount,\r\n        fieldData?.assoc_decode?.length,\r\n        event\r\n      );\r\n    }\r\n  };\r\n\r\n  const loadMoreData = async (\r\n    assocTypeId,\r\n    searchText,\r\n    maxCount,\r\n    skipCount,\r\n    event\r\n  ) => {\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n    // setLoaded(false);\r\n    setLoadMoreText(true);\r\n    if (searchText !== \"\") {\r\n      skipCount = 0;\r\n    }\r\n\r\n    var parentData = parentChildData.find(\r\n      (x) => x.CASE_ASSOC_TYPE_ID_CHILD == assocTypeId\r\n    );\r\n\r\n    var parentId = parentData?.CASE_ASSOC_TYPE_ID_PARENT;\r\n    if (!parentId || parentId <= 0) {\r\n      parentId = 0;\r\n    }\r\n\r\n    var commentIndex = data.findIndex(function (c) {\r\n      return c.AssocTypeId == assocTypeId;\r\n    });\r\n\r\n    const currentData = [...data];\r\n\r\n    if (currentData[commentIndex]) {\r\n      var jsonData = {\r\n        searchText: searchText,\r\n        maxCount: maxCount,\r\n        skipCount: skipCount,\r\n        application: 0,\r\n        typeID: caseType,\r\n        fieldID: assocTypeId,\r\n        username: \"\",\r\n        parentValues: {\r\n          [String(parentId)]: [String(parentId > 0 ? parentValue : 0)],\r\n        },\r\n      };\r\n\r\n      var config = {\r\n        method: \"post\",\r\n        url: \"http://localhost:5000/cases/GetExternalDataValues\",\r\n        data: jsonData,\r\n      };\r\n\r\n      await axios(config)\r\n        .then(function (response) {\r\n          const externalData = response.data.responseContent;\r\n          currentData[commentIndex].assoc_decode = currentData[\r\n            commentIndex\r\n          ].assoc_decode.concat(externalData);\r\n          setData(currentData);\r\n          setLoadMoreText(false);\r\n        })\r\n        .catch(function (error) {\r\n          console.log(error);\r\n        });\r\n    }\r\n  };\r\n\r\n  const handleChange = (assocTypeId, event) => {\r\n    if (event) {\r\n      const value = event.target.value;\r\n      setParentValue(value);\r\n      var parentData = parentChildData.find(\r\n        (x) => x.CASE_ASSOC_TYPE_ID_PARENT == assocTypeId\r\n      );\r\n\r\n      if (value && value != \"0\" && parentData) {\r\n        var commentIndex = data.findIndex(function (c) {\r\n          return c.AssocTypeId == parentData.CASE_ASSOC_TYPE_ID_CHILD;\r\n        });\r\n        const currentData = [...data];\r\n        if (currentData[commentIndex]) {\r\n          parentChildData.forEach(function (item, index) {\r\n            currentData[commentIndex].assoc_decode = [];\r\n            var childData = parentChildData.find(\r\n              (x) =>\r\n                x.CASE_ASSOC_TYPE_ID_PARENT ==\r\n                currentData[commentIndex].AssocTypeId\r\n            );\r\n            if (childData) {\r\n              if (childData.CASE_ASSOC_TYPE_ID_CHILD > 0) {\r\n                var childIndex = data.findIndex(function (c) {\r\n                  return c.AssocTypeId == childData.CASE_ASSOC_TYPE_ID_CHILD;\r\n                });\r\n                if (currentData[childIndex]) {\r\n                  currentData[childIndex].assoc_decode = [];\r\n                }\r\n              }\r\n            }\r\n          });\r\n          var parentId = parentData?.CASE_ASSOC_TYPE_ID_PARENT;\r\n\r\n          var jsonData = {\r\n            searchText: \"\",\r\n            maxCount: maxCount,\r\n            skipCount: 0,\r\n            application: 0,\r\n            typeID: caseType,\r\n            fieldID: parentData?.CASE_ASSOC_TYPE_ID_CHILD,\r\n            username: \"\",\r\n            parentValues: { [String(parentId)]: [String(value)] },\r\n          };\r\n\r\n          var config = {\r\n            method: \"post\",\r\n            url: \"http://localhost:5000/cases/GetExternalDataValues\",\r\n            data: jsonData,\r\n          };\r\n\r\n          axios(config)\r\n            .then(function (response) {\r\n              const externalData = response.data.responseContent;\r\n              currentData[commentIndex].assoc_decode = externalData;\r\n              setData(currentData);\r\n            })\r\n            .catch(function (error) {\r\n              console.log(error);\r\n            });\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    let fields = {};\r\n    var submitted = false;\r\n    Object.entries(event.target.elements).forEach(([name, input]) => {\r\n      if (input.type != \"submit\") {\r\n        if (input.name != \"\" && input.value != \"\" && caseType > 0) {\r\n          submitted = true;\r\n          fields[input.name] = input.value;\r\n        }\r\n      }\r\n    });\r\n\r\n    if (froalaValue) {\r\n      fields[\"Froala\"] = froalaValue;\r\n    }\r\n\r\n    if (formDataValue) {\r\n      fields[\"fileData\"] = formDataValue;\r\n    }\r\n\r\n    if (assignTo > 0) {\r\n      fields[\"AssignTo\"] = assignTo;\r\n    } else {\r\n      fields[\"AssignTo\"] = defaultHopperId;\r\n    }\r\n\r\n    if (submitted == true) {\r\n      //{ timer: 3000 }\r\n      swal(\r\n        \"Good job!\",\r\n        \"Form Submitted : \" + JSON.stringify(fields),\r\n        \"success\"\r\n      );\r\n    }\r\n    console.log(fields);\r\n  };\r\n\r\n  const convertRequired = (data) => {\r\n    if (data.IsRequired == \"Y\") {\r\n      //backend use Y and N for True and False\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  const createTextField = (data) => {\r\n    var required = convertRequired(data);\r\n    return (\r\n      <div className=\"\">\r\n        <TextField\r\n          name={String(data.AssocTypeId)}\r\n          id={String(data.AssocTypeId)}\r\n          label={data.Name}\r\n          required={required}\r\n          fullWidth={true}\r\n          InputLabelProps={{ shrink: true }}\r\n        />\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const handleModelChange = (event) => {\r\n    setFroala(event);\r\n  };\r\n\r\n  const createFroalaField = () => {\r\n    return (\r\n      <div className=\"froala-editor\">\r\n        <br></br>\r\n        <br></br>\r\n        <Froala onModelChange={(e) => handleModelChange(e)} fullWidth={true} />\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const createDateField = (data) => {\r\n    var required = convertRequired(data);\r\n\r\n    return (\r\n      <div className=\"\">\r\n        <TextField\r\n          type=\"date\"\r\n          name={String(data.AssocTypeId)}\r\n          id={String(data.AssocTypeId)}\r\n          label={data.Name}\r\n          InputLabelProps={{ shrink: true }}\r\n          required={required}\r\n          fullWidth={true}\r\n        />\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const createLoader = () => {\r\n    return <Loading />;\r\n  };\r\n\r\n  const createDropDownField = (data) => {\r\n    var required = convertRequired(data);\r\n\r\n    return (\r\n      <div\r\n        className=\"card-page-wrap\"\r\n        id=\"card-page-wrap\"\r\n        onScroll={(event) => onScroll(data, event)}\r\n      >\r\n        {\" \"}\r\n        <TextField\r\n          id={String(data?.AssocTypeId)}\r\n          select\r\n          name={String(data?.AssocTypeId)}\r\n          label={data.Name}\r\n          // value={state.value}\r\n          onChange={(event) => handleChange(data?.AssocTypeId, event)}\r\n          fullWidth={true}\r\n          required={required}\r\n        >\r\n          {data.assoc_decode\r\n            ? data.assoc_decode.map((option) => (\r\n                <MenuItem key={option.DecodeId} value={option.DecodeId}>\r\n                  {option.DecodeValue}\r\n                </MenuItem>\r\n              ))\r\n            : []}\r\n\r\n          {data?.assoc_decode.length >= maxCount &&\r\n          data?.assoc_decode.length % maxCount == 0 ? (\r\n            <span>Loading Please Wait...</span>\r\n          ) : (\r\n            <span></span>\r\n          )}\r\n        </TextField>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const handleOnFileChange = (fileData) => {\r\n    if (fileData) {\r\n      //Set details of the uploaded file\r\n      setFormDataValue(fileData);\r\n      console.log(fileData);\r\n    }\r\n  };\r\n\r\n  const createFileField = () => {\r\n    return (\r\n      <FileUpload\r\n        caseType={caseType}\r\n        handleOnFileChange={handleOnFileChange}\r\n      ></FileUpload>\r\n    );\r\n  };\r\n\r\n  const handleAutocompleteChange = (userId) => {\r\n    setAssignTo(userId);\r\n  };\r\n\r\n  const createAssignTo = () => {\r\n    return (\r\n      <UserAutocomplete\r\n        defaultHopper={defaultHopper}\r\n        defaultHopperId={defaultHopperId}\r\n        handleAutocompleteChange={handleAutocompleteChange}\r\n      ></UserAutocomplete>\r\n    );\r\n  };\r\n\r\n  const fieldHandler = (data) => {\r\n    //TODO: implment id structure\r\n    var required = convertRequired(data);\r\n\r\n    if (data.AssocFieldType === \"T\" || data.AssocFieldType === \"N\") {\r\n      return createTextField(data);\r\n    } else if (data.AssocFieldType === \"A\") {\r\n      return createDateField(data);\r\n    } else if (\r\n      (data.AssocFieldType === \"D\" ||\r\n        data.AssocFieldType === \"E\" ||\r\n        data.AssocFieldType === \"O\") &&\r\n      data.ExternalDataSourceId !== 121\r\n    ) {\r\n      return createDropDownField(data);\r\n    }\r\n  };\r\n\r\n  const loadFields = () => {\r\n    return (\r\n      <Box>\r\n        <div>\r\n          <Grid container spacing={3}>\r\n            <Grid item xs={6}>\r\n              <div>\r\n                {data\r\n                  ? data.map((item, idx) => (\r\n                      <div key={idx}>{fieldHandler(item)}</div>\r\n                    ))\r\n                  : []}\r\n                <Box>\r\n                  <Box>{data?.length > 0 ? createFileField() : \"\"}</Box>\r\n                  <Box>{data?.length > 0 ? createAssignTo() : \"\"}</Box>\r\n                </Box>\r\n              </div>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <div>{data?.length > 0 ? createFroalaField() : \"\"}</div>\r\n            </Grid>\r\n          </Grid>\r\n        </div>\r\n\r\n        {!loaded ? createLoader() : []}\r\n      </Box>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Grid container spacing={3}>\r\n      <Grid item xs={12}>\r\n        <form onSubmit={handleSubmit} className=\"case-create-form\">\r\n          <Card>\r\n            <Container className=\"case-create-form-div\">\r\n              <div style={{ width: \"50%\" }} className=\"\">\r\n                {\" \"}\r\n                <TextField\r\n                  id={\"CaseType\" + caseType}\r\n                  name=\"CaseType\"\r\n                  select\r\n                  label=\"Case Type\"\r\n                  value={caseType}\r\n                  onChange={(e) => handleCaseTypeChange(e)}\r\n                  fullWidth={true}\r\n                  required\r\n                  disabled={disableCaseType}\r\n                >\r\n                  <MenuItem key=\"0\" value=\"0\">\r\n                    {\"Please Select Case Type\"}\r\n                  </MenuItem>\r\n                  {caseTypeData\r\n                    ? caseTypeData.map((option) => (\r\n                        <MenuItem\r\n                          key={option.CASE_TYPE_ID}\r\n                          value={option.CASE_TYPE_ID}\r\n                        >\r\n                          {option.NAME}\r\n                        </MenuItem>\r\n                      ))\r\n                    : []}\r\n                </TextField>\r\n                <Fab\r\n                  style={{ top: 49 }}\r\n                  className=\"create-case-button\"\r\n                  aria-label=\"add\"\r\n                  type=\"submit\"\r\n                >\r\n                  +\r\n                </Fab>\r\n              </div>\r\n\r\n              {loadFields()}\r\n            </Container>\r\n          </Card>\r\n        </form>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\r\nimport {\r\n    Avatar,\r\n    Box,\r\n    IconButton,\r\n    makeStyles,\r\n    Typography}  from '@material-ui/core'\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\n\r\nconst useStyles = makeStyles((theme)=>({\r\n        small: {\r\n            width: theme.spacing(3),\r\n            height: theme.spacing(3),\r\n          },\r\n          large: {\r\n            width: theme.spacing(7),\r\n            height: theme.spacing(7),\r\n          },\r\n    }))\r\n\r\nexport default function AppIcon(props){\r\n    const classes = useStyles()\r\n\r\n    return (    \r\n        <Box>\r\n            <Avatar src={props.src}\r\n                    className={classes.large}>\r\n            </Avatar>\r\n        \r\n            <IconButton size=\"small\">\r\n                <Typography>\r\n                    {props.name}\r\n                </Typography>  \r\n                <ArrowDropDownIcon/>\r\n            </IconButton>\r\n        </Box>\r\n\r\n    )\r\n}\r\n\r\nfunction AvatarIcon(props){\r\n    const classes = useStyles()\r\n\r\n    return (    \r\n        <Box>\r\n            <IconButton size=\"small\">\r\n                <NotificationsIcon/>\r\n            </IconButton>\r\n            <IconButton size=\"small\">\r\n                <SettingsIcon/>\r\n            </IconButton>\r\n            <Avatar src={props.src}\r\n                    className={classes.large}>\r\n            </Avatar>\r\n        \r\n            \r\n        </Box>\r\n\r\n    )\r\n}\r\nexport {AvatarIcon};\r\n","import React,{useState, useEffect} from 'react';\r\nimport {Drawer,\r\n        Divider,\r\n        Button,\r\n\r\n        Paper,\r\n        Grid,\r\n        ListItem,\r\n        ListItemIcon,\r\n        ListItemText,\r\n        ListItemAvatar,\r\n        makeStyles} from '@material-ui/core'\r\nimport {Streetview, SentimentSatisfied} from '@material-ui/icons'\r\nimport AppIcon, {AvatarIcon} from './app_icon.js'\r\nimport AssignmentIcon from '@material-ui/icons/Assignment';\r\nimport NoteAddIcon from '@material-ui/icons/NoteAdd';\r\nimport PeopleIcon from '@material-ui/icons/People';\r\nimport TimelineIcon from '@material-ui/icons/Timeline';\r\nimport ViewListIcon from '@material-ui/icons/ViewList';\r\nimport { Router, Link } from \"@reach/router\"\r\n\r\nconst useStyles = makeStyles((theme)=>({\r\n    avatar:{\r\n      flexGrow:'1'  },\r\n }));\r\n\r\nexport default function Dashboard(){\r\n    // Create a state that is displays a page and updated on click\r\n    //\r\n    const app_icon = 'http://entities.boxerproperty.com//Download.aspx?FileID=458702' \r\n    const name = 'Inside Sales'\r\n    const avatar = 'http://services.boxerproperty.com/userphotos/DownloadPhoto.aspx?username=MichaelAF'\r\n    \r\n    const overview = () => {\r\n        console.log('clicked')\r\n        return 'Hello World'\r\n    }\r\n\r\n    const [page,setPage] = useState(null)\r\n\r\n    const classes = useStyles();\r\n    return (\r\n        <div className={classes.avatar}>\r\n        <Drawer\r\n        variant=\"permanent\"\r\n        anchor=\"left\"\r\n        color=\"primary\">\r\n            \r\n            <ListItem alignItems='center'>\r\n                <AppIcon src={app_icon}\r\n                        name={name}></AppIcon>\r\n            </ListItem>\r\n        <Divider/>\r\n            <ListItem>\r\n                <ListItemIcon> <Streetview/> </ListItemIcon>\r\n                <ListItemText> <Link to=\"overview\">Overview</Link> </ListItemText>\r\n            </ListItem>\r\n        <Divider/>\r\n            <ListItem button onClick={() => {setPage('Tasks')}}>\r\n                <ListItemIcon> <AssignmentIcon/> </ListItemIcon>\r\n                <ListItemText> Tasks </ListItemText>\r\n            </ListItem >\r\n        <Divider/>\r\n            <ListItem button onClick={() => {setPage('People')}}>\r\n                <ListItemIcon> <PeopleIcon/> </ListItemIcon>\r\n                <ListItemText> People </ListItemText>\r\n            </ListItem>\r\n        <Divider/>\r\n            <ListItem button>\r\n                <ListItemIcon> <ViewListIcon/> </ListItemIcon>\r\n                <ListItemText> Items </ListItemText>\r\n            </ListItem>\r\n        <Divider/>\r\n            <ListItem button>\r\n                <ListItemIcon> <NoteAddIcon/> </ListItemIcon>\r\n                <ListItemText> Forms </ListItemText>\r\n            </ListItem>\r\n        <Divider/>\r\n            <ListItem button>\r\n                <ListItemIcon> <TimelineIcon/> </ListItemIcon>\r\n                <ListItemText> Insights </ListItemText>\r\n            </ListItem>\r\n        <Divider/>\r\n            <ListItem button>\r\n                <ListItemIcon> <PeopleIcon/> </ListItemIcon>\r\n                <ListItemText><Link to=\"case-create\">CaseCreator</Link></ListItemText>   \r\n            </ListItem>\r\n            <Divider/>\r\n            <Button color='secondary'>\r\n                HELOO WROLD\r\n            </Button>\r\n        </Drawer>\r\n        <Grid container>\r\n            <Grid item xs={11}>\r\n            <Paper> {page} </Paper>\r\n            </Grid>\r\n\r\n            <Grid item xs={1}>\r\n                <Paper>\r\n                    <AvatarIcon src ={avatar}/>\r\n                </Paper>\r\n            </Grid>\r\n        </Grid>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport Box from '@material-ui/core/Box';\r\n\r\nimport { makeStyles, createStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((props) => createStyles({\r\n  glass: {\r\n    background: 'rgba( 255, 255, 255, 0.25 )',\r\n    //'box-shadow':' 0 8px 32px 0 rgba( 31, 38, 135, 0.37 )',\r\n    'backdrop-filter': 'blur(7px)',\r\n    //filter: 'blur(10px)',\r\n    'border-radius': '10px',\r\n  },\r\n}));\r\n\r\nexport default function GlassBox(props){\r\n    const classes = useStyles(props)\r\n    //'url(\"https://source.unsplash.com/random\")'\r\n    const bg = {'background-image':'white',\r\n                'height':'100vh',\r\n                'width':'100wh'}\r\n    \r\n    return (\r\n        <div style = {bg}>\r\n            <Box className={classes.glass}\r\n                 style = {{width:500, height:500, margin:'auto'}}>\r\n                {props.children}\r\n                <div style={{background:'transparent'}}>HELLO WORLD</div>\r\n            </Box>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import { Button, Card, Container } from \"@material-ui/core\";\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\nexport default function OverView(props) {\r\n  const [loaded, setLoaded] = useState(false);\r\n\r\n  //create function that just take sthe url and sets a json blob\r\n  const apps = () => {\r\n    setTimeout(() => {\r\n      setLoaded(true);\r\n    }, 1000);\r\n  };\r\n\r\n  useEffect(() => {\r\n    apps();\r\n  }, []);\r\n\r\n  const handleClick = (props) => {\r\n    props.navigate(\"/case-create\");\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {loaded ? (\r\n        <form>\r\n          <Card>\r\n            <Container maxWidth=\"sm\">\r\n              <div style={{ marginTop: \"11px\" }}> OverView Works....!!!</div>\r\n              <div\r\n                className=\"create-button\"\r\n                style={{ cursor: \"pointer\" }}\r\n                onClick={() => {\r\n                  handleClick(props);\r\n                }}\r\n              >\r\n                <Button className=\"\">+ Create</Button>\r\n              </div>\r\n            </Container>\r\n          </Card>\r\n        </form>\r\n      ) : (\r\n        <Card>\r\n          <Container maxWidth=\"sm\">\r\n            <div className=\"\"> Loading Please Wait....!!!</div>\r\n          </Container>\r\n        </Card>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import { createMuiTheme } from \"@material-ui/core\"\r\nimport {indigo, lightBlue } from \"@material-ui/core/colors\"\r\n\r\nconst theme = createMuiTheme({\r\n    palette:{\r\n       \r\n        primary:{\r\n            main: indigo[500]\r\n        },\r\n        secondary:{\r\n            main:lightBlue[500]\r\n        }\r\n\r\n    }\r\n})\r\n\r\nexport default theme;\r\n","import { makeStyles, ThemeProvider } from \"@material-ui/core\";\r\nimport { Router } from \"@reach/router\";\r\nimport React from \"react\";\r\nimport \"./App.css\";\r\nimport CaseCreator from \"./components/case_creator.js\";\r\nimport Dashboard from \"./components/dashboard.js\";\r\nimport GlassBox from \"./components/glassware\";\r\nimport OverView from \"./components/overview\";\r\nimport theme from \"./components/theme.js\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    minHeight: \"100vh\",\r\n    backgroundImage: `url(https://icatcare.org/app/uploads/2018/07/Thinking-of-getting-a-cat.png)`,\r\n  },\r\n}));\r\n//<Dashboard></Dashboard>\r\nfunction App() {\r\n  const classes = useStyles();\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <div classes={classes.root}></div>\r\n      \r\n      <div>\r\n        <Router>\r\n          <CaseCreator path=\"case-create\" />\r\n          <OverView path=\"overview\" />\r\n          <GlassBox path=\"glass\"></GlassBox>\r\n        </Router>\r\n      </div>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}